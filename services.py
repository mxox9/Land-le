from config import SERVICE_IMAGE
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# Service data structure - Replace service_id here with real ID from SMM panel
SERVICES = {
    "I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç": [
        {
            "id": "insta_likes_temp_1",  # Replace with real SMM panel service ID
            "category": "I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç",
            "name": "‚ù§Ô∏è I…¥s·¥õ·¥Ä L…™·¥ã·¥ás",
            "description": "H…™…¢ ú-«´·¥ú·¥Ä ü…™·¥õ è I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç  ü…™·¥ã·¥ás “ì Ä·¥è·¥ç  Ä·¥á·¥Ä ü ·¥ús·¥á Äs",
            "min": 100,
            "max": 10000,
            "unit": "likes",
            "price": 25.0,
            "active": True
        },
        {
            "id": "insta_follows_temp_2",  # Replace with real SMM panel service ID
            "category": "I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç",
            "name": "üë• I…¥s·¥õ·¥Ä F·¥è ü ü·¥è·¥°s",
            "description": "R·¥á·¥Ä ü I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç “ì·¥è ü ü·¥è·¥°·¥á Äs …¢·¥ú·¥Ä Ä·¥Ä…¥·¥õ·¥á·¥á·¥Ö",
            "min": 50,
            "max": 5000,
            "unit": "followers",
            "price": 120.0,
            "active": True
        },
        {
            "id": "insta_views_temp_3",  # Replace with real SMM panel service ID
            "category": "I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç",
            "name": "üëÅ I…¥s·¥õ·¥Ä V…™·¥á·¥°s",
            "description": "I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç  Ä·¥á·¥á üs ·¥Ä…¥·¥Ö ·¥†…™·¥Ö·¥á·¥è ·¥†…™·¥á·¥°s",
            "min": 500,
            "max": 50000,
            "unit": "views",
            "price": 15.0,
            "active": True
        }
    ],
    "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã": [
        {
            "id": "fb_likes_temp_4",  # Replace with real SMM panel service ID
            "category": "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã",
            "name": "üëç F ô L…™·¥ã·¥ás",
            "description": "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã ·¥ò·¥Ä…¢·¥á ·¥Ä…¥·¥Ö ·¥ò·¥ès·¥õ  ü…™·¥ã·¥ás",
            "min": 100,
            "max": 10000,
            "unit": "likes",
            "price": 30.0,
            "active": True
        },
        {
            "id": "fb_views_temp_5",  # Replace with real SMM panel service ID
            "category": "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã",
            "name": "üëÅ F ô V…™·¥á·¥°s",
            "description": "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã ·¥†…™·¥Ö·¥á·¥è ·¥†…™·¥á·¥°s",
            "min": 500,
            "max": 50000,
            "unit": "views",
            "price": 20.0,
            "active": True
        },
        {
            "id": "fb_follows_temp_6",  # Replace with real SMM panel service ID
            "category": "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã",
            "name": "üë• F ô F·¥è ü ü·¥è·¥°s",
            "description": "F·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã ·¥ò·¥Ä…¢·¥á “ì·¥è ü ü·¥è·¥°·¥á Äs",
            "min": 50,
            "max": 5000,
            "unit": "followers",
            "price": 150.0,
            "active": True
        }
    ],
    "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç": [
        {
            "id": "tg_members_temp_7",  # Replace with real SMM panel service ID
            "category": "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç",
            "name": "üë• T…¢ M·¥á·¥ç ô·¥á Äs",
            "description": "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥Ñ ú·¥Ä…¥…¥·¥á ü/…¢ Ä·¥è·¥ú·¥ò ·¥ç·¥á·¥ç ô·¥á Äs",
            "min": 100,
            "max": 10000,
            "unit": "members",
            "price": 80.0,
            "active": True
        },
        {
            "id": "tg_views_temp_8",  # Replace with real SMM panel service ID
            "category": "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç",
            "name": "üëÅ T…¢ V…™·¥á·¥°s",
            "description": "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥ò·¥ès·¥õ ·¥†…™·¥á·¥°s",
            "min": 1000,
            "max": 100000,
            "unit": "views",
            "price": 10.0,
            "active": True
        },
        {
            "id": "tg_reactions_temp_9",  # Replace with real SMM panel service ID
            "category": "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç",
            "name": "üí¨ T…¢ R·¥á·¥Ä·¥Ñ·¥õ…™·¥è…¥s",
            "description": "T·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥ò·¥ès·¥õ  Ä·¥á·¥Ä·¥Ñ·¥õ…™·¥è…¥s",
            "min": 100,
            "max": 5000,
            "unit": "reactions",
            "price": 25.0,
            "active": True
        }
    ],
    "Y·¥è·¥úT·¥ú ô·¥á": [
        {
            "id": "yt_likes_temp_10",  # Replace with real SMM panel service ID
            "category": "Y·¥è·¥úT·¥ú ô·¥á",
            "name": "üëç Y·¥õ L…™·¥ã·¥ás",
            "description": "Y·¥è·¥úT·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è  ü…™·¥ã·¥ás",
            "min": 100,
            "max": 10000,
            "unit": "likes",
            "price": 40.0,
            "active": True
        },
        {
            "id": "yt_views_temp_11",  # Replace with real SMM panel service ID
            "category": "Y·¥è·¥úT·¥ú ô·¥á",
            "name": "üëÅ Y·¥õ V…™·¥á·¥°s",
            "description": "Y·¥è·¥úT·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è ·¥†…™·¥á·¥°s",
            "min": 1000,
            "max": 100000,
            "unit": "views",
            "price": 12.0,
            "active": True
        },
        {
            "id": "yt_subs_temp_12",  # Replace with real SMM panel service ID
            "category": "Y·¥è·¥úT·¥ú ô·¥á",
            "name": "üîî Y·¥õ S·¥ú ôs·¥Ñ Ä…™ ô·¥ás",
            "description": "Y·¥è·¥úT·¥ú ô·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü s·¥ú ôs·¥Ñ Ä…™ ô·¥á Äs",
            "min": 50,
            "max": 5000,
            "unit": "subscribers",
            "price": 200.0,
            "active": True
        }
    ],
    "T·¥°…™·¥õ·¥õ·¥á Ä": [
        {
            "id": "twt_likes_temp_13",  # Replace with real SMM panel service ID
            "category": "T·¥°…™·¥õ·¥õ·¥á Ä",
            "name": "‚ù§Ô∏è T·¥°·¥õ L…™·¥ã·¥ás",
            "description": "T·¥°…™·¥õ·¥õ·¥á Ä ·¥õ·¥°·¥á·¥á·¥õ  ü…™·¥ã·¥ás",
            "min": 100,
            "max": 10000,
            "unit": "likes",
            "price": 35.0,
            "active": True
        },
        {
            "id": "twt_retweets_temp_14",  # Replace with real SMM panel service ID
            "category": "T·¥°…™·¥õ·¥õ·¥á Ä",
            "name": "üîÅ T·¥°·¥õ R·¥á·¥õ·¥°·¥á·¥á·¥õs",
            "description": "T·¥°…™·¥õ·¥õ·¥á Ä  Ä·¥á·¥õ·¥°·¥á·¥á·¥õs",
            "min": 100,
            "max": 5000,
            "unit": "retweets",
            "price": 45.0,
            "active": True
        },
        {
            "id": "twt_follows_temp_15",  # Replace with real SMM panel service ID
            "category": "T·¥°…™·¥õ·¥õ·¥á Ä",
            "name": "üë• T·¥°·¥õ F·¥è ü ü·¥è·¥°s",
            "description": "T·¥°…™·¥õ·¥õ·¥á Ä “ì·¥è ü ü·¥è·¥°·¥á Äs",
            "min": 50,
            "max": 5000,
            "unit": "followers",
            "price": 180.0,
            "active": True
        }
    ],
    "T…™·¥ãT·¥è·¥ã": [
        {
            "id": "tik_likes_temp_16",  # Replace with real SMM panel service ID
            "category": "T…™·¥ãT·¥è·¥ã",
            "name": "‚ù§Ô∏è T…™·¥ã L…™·¥ã·¥ás",
            "description": "T…™·¥ãT·¥è·¥ã ·¥†…™·¥Ö·¥á·¥è  ü…™·¥ã·¥ás",
            "min": 100,
            "max": 10000,
            "unit": "likes",
            "price": 28.0,
            "active": True
        },
        {
            "id": "tik_views_temp_17",  # Replace with real SMM panel service ID
            "category": "T…™·¥ãT·¥è·¥ã",
            "name": "üëÅ T…™·¥ã V…™·¥á·¥°s",
            "description": "T…™·¥ãT·¥è·¥ã ·¥†…™·¥Ö·¥á·¥è ·¥†…™·¥á·¥°s",
            "min": 1000,
            "max": 100000,
            "unit": "views",
            "price": 18.0,
            "active": True
        },
        {
            "id": "tik_follows_temp_18",  # Replace with real SMM panel service ID
            "category": "T…™·¥ãT·¥è·¥ã",
            "name": "üë• T…™·¥ã F·¥è ü ü·¥è·¥°s",
            "description": "T…™·¥ãT·¥è·¥ã ·¥ò Ä·¥è“ì…™ ü·¥á “ì·¥è ü ü·¥è·¥°·¥á Äs",
            "min": 50,
            "max": 5000,
            "unit": "followers",
            "price": 160.0,
            "active": True
        }
    ]
}

def get_categories_keyboard():
    """Get inline keyboard for service categories"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    buttons = []
    for category in SERVICES.keys():
        buttons.append(InlineKeyboardButton(category, callback_data=f"category_{category}"))
    # Add two buttons per row
    for i in range(0, len(buttons), 2):
        row = buttons[i:i+2]
        keyboard.add(*row)
    keyboard.add(InlineKeyboardButton("üîô B·¥Ä·¥Ñ·¥ã", callback_data="back_to_main"))
    return keyboard

def get_services_keyboard(category):
    """Get inline keyboard for services in a category"""
    keyboard = InlineKeyboardMarkup()
    for service in SERVICES[category]:
        if service["active"]:
            keyboard.add(InlineKeyboardButton(
                service["name"], 
                callback_data=f"service_{service['id']}"
            ))
    keyboard.add(InlineKeyboardButton("üîô B·¥Ä·¥Ñ·¥ã", callback_data="back_to_categories"))
    return keyboard

def get_service_by_id(service_id):
    """Find service by ID"""
    for category_services in SERVICES.values():
        for service in category_services:
            if service["id"] == service_id:
                return service
    return None

def show_service_details(bot, call, service):
    """Show service details and ask for link"""
    caption = f"""
üì¶ {service['name']}

üìù {service['description']}

üìä Q·¥ú·¥Ä…¥·¥õ…™·¥õ è R·¥Ä…¥…¢·¥á: {service['min']:,} - {service['max']:,} {service['unit']}
üí∞ P Ä…™·¥Ñ·¥á: ‚Çπ{service['price']:.2f} ·¥ò·¥á Ä 1,000 {service['unit']}

P ü·¥á·¥Äs·¥á s·¥á…¥·¥Ö ·¥õ ú·¥á  ü…™…¥·¥ã  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á:
    """.strip()
    
    bot.send_photo(
        call.message.chat.id,
        SERVICE_IMAGE,
        caption=caption
    )
    
    # Store service selection in user data
    from config import users
    user_id = call.from_user.id
    if user_id not in users:
        users[user_id] = {}
    users[user_id]['selected_service'] = service['id']
